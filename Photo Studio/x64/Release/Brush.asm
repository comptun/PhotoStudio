; Listing generated by Microsoft (R) Optimizing Compiler Version 19.36.32535.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_05PDOBBJNA@Color@				; `string'
PUBLIC	??_C@_0L@CKCKKFCJ@Brush?5tool@			; `string'
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	_Init_thread_epoch:DWORD
;	COMDAT ?flags@?1??DrawPaintbrushMenu@Brush@@QEAAXXZ@4HA
_BSS	SEGMENT
?flags@?1??DrawPaintbrushMenu@Brush@@QEAAXXZ@4HA DD 01H DUP (?) ; `Brush::DrawPaintbrushMenu'::`2'::flags
_BSS	ENDS
;	COMDAT ?Pressed@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4_NA
_DATA	SEGMENT
?Pressed@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4_NA DB 01H ; `Brush::DrawInterpolatedPaintbrush'::`2'::Pressed
_DATA	ENDS
;	COMDAT ??_C@_0L@CKCKKFCJ@Brush?5tool@
CONST	SEGMENT
??_C@_0L@CKCKKFCJ@Brush?5tool@ DB 'Brush tool', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDOBBJNA@Color@
CONST	SEGMENT
??_C@_05PDOBBJNA@Color@ DB 'Color', 00H			; `string'
PUBLIC	??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@AEBU10@0@Z ; glm::operator*<float,0>
PUBLIC	?call@?$compute_dot@U?$vec@$02M$0A@@glm@@M$0A@@detail@glm@@SAMAEBU?$vec@$02M$0A@@3@0@Z ; glm::detail::compute_dot<glm::vec<3,float,0>,float,0>::call
PUBLIC	??$dot@$02M$0A@@glm@@YAMAEBU?$vec@$02M$0A@@0@0@Z ; glm::dot<3,float,0>
PUBLIC	?call@?$compute_length@$02M$0A@$0A@@detail@glm@@SAMAEBU?$vec@$02M$0A@@3@@Z ; glm::detail::compute_length<3,float,0,0>::call
PUBLIC	??$?0MMMN@?$vec@$03M$0A@@glm@@QEAA@MMMN@Z	; glm::vec<4,float,0>::vec<4,float,0><float,float,float,double>
PUBLIC	??$length@$02M$0A@@glm@@YAMAEBU?$vec@$02M$0A@@0@@Z ; glm::length<3,float,0>
PUBLIC	??$?GM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@AEBU10@0@Z ; glm::operator-<float,0>
PUBLIC	?DrawPaintbrushMenu@Brush@@QEAAXXZ		; Brush::DrawPaintbrushMenu
PUBLIC	?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z ; Brush::DrawPencil
PUBLIC	?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z	; Brush::DrawInterpolatedPaintbrush
PUBLIC	??1Brush@@QEAA@XZ				; Brush::~Brush
PUBLIC	??0Brush@@QEAA@XZ				; Brush::Brush
PUBLIC	?sqrt@@YAMM@Z					; sqrt
;	COMDAT ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A
_BSS	SEGMENT
?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A DB 0cH DUP (?) ; `Brush::DrawInterpolatedPaintbrush'::`2'::PreviousPosition
_BSS	ENDS
;	COMDAT ?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA DD 01H DUP (?) ; `Brush::DrawInterpolatedPaintbrush'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
_BSS	SEGMENT
?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA DD 01H DUP (?) ; `Brush::DrawInterpolatedPaintbrush'::`2'::$TSS1
_BSS	ENDS
;	COMDAT ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A
_BSS	SEGMENT
?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A DB 0cH DUP (?) ; `Brush::DrawInterpolatedPaintbrush'::`2'::PreviousDrawnPosition
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawPaintbrushMenu@Brush@@QEAAXXZ DD imagerel $LN12@DrawPaintb
	DD	imagerel $LN12@DrawPaintb+226
	DD	imagerel $unwind$?DrawPaintbrushMenu@Brush@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z DD imagerel $LN145@DrawPencil
	DD	imagerel $LN145@DrawPencil+363
	DD	imagerel $unwind$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z DD imagerel $LN729
	DD	imagerel $LN729+1819
	DD	imagerel $unwind$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Brush@@QEAA@XZ DD imagerel $LN11@Brush
	DD	imagerel $LN11@Brush+34
	DD	imagerel $unwind$??1Brush@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Brush@@QEAA@XZ DD imagerel $LN6@Brush
	DD	imagerel $LN6@Brush+43
	DD	imagerel $unwind$??0Brush@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Brush@@QEAA@XZ DQ 03002320600020601r	; 1.96423e-77
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Brush@@QEAA@XZ DW 01802H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Brush@@QEAA@XZ DW 0e02H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Brush@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1Brush@@QEAA@XZ
	DD	imagerel $ip2state$??1Brush@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Brush@@QEAA@XZ DQ 03002320600020619r	; 1.96423e-77
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Brush@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z DB 012H
	DB	'Y', 07H
	DB	00H
	DB	0c5H, 03H
	DB	02H
	DB	'6'
	DB	00H
	DB	089H, 04H
	DB	04H
	DB	'0'
	DB	00H
	DB	0e8H
	DB	04H
	DB	'h'
	DB	00H
	DB	0e9H, 04H
	DB	02H
	DB	'L'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z DB 028H
	DD	imagerel $stateUnwindMap$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z
	DD	imagerel $ip2state$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z DD 0194b11H
	DD	012d84bH
	DD	013c843H
	DD	014b83bH
	DD	015a833H
	DD	016982eH
	DD	0178829H
	DD	0187824H
	DD	0196820H
	DD	03c341cH
	DD	034011cH
	DD	0e00cf00eH
	DD	06009700aH
	DD	05008H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z DD 0202f504H
	DW	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z DW 0a02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z DB 028H
	DD	imagerel $stateUnwindMap$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z
	DD	imagerel $ip2state$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z DQ 00022010900030911r ; 5.00754e-308
	DD	03002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawPaintbrushMenu@Brush@@QEAAXXZ DQ 03002b20600021519r ; 2.01821e-77
	DD	imagerel __GSHandlerCheck
	DD	050H
; Function compile flags: /Ogtpy
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\func_geometric.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\cmath
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\func_geometric.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\cmath
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec4.inl
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec4.inl
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\ext\matrix_clip_space.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl
; File C:\dev\Photo Studio\Photo Studio\Source\Utilities.cpp
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp
;	COMDAT ?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z
_TEXT	SEGMENT
Pos$120 = 48
$T6 = 48
$T119 = 64
Position$ = 64
$T98 = 80
$T35 = 80
$T15 = 80
$T70 = 144
$T51 = 144
$T8 = 144
$T118 = 208
$T13 = 224
this$ = 464
CustomSize$ = 472
?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z PROC	; Brush::DrawInterpolatedPaintbrush, COMDAT

; 14   : {

$LN729:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-200]
	sub	rsp, 416				; 000001a0H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	movaps	XMMWORD PTR [rax-120], xmm10
	movaps	XMMWORD PTR [rax-136], xmm11
	movaps	XMMWORD PTR [rax-152], xmm12
	movaps	XMMWORD PTR [rax-168], xmm13
	movaps	xmm13, xmm1
	mov	rdi, rcx

; 15   :     glm::vec3 Position = Input::Mouse::CanvasPos;

	movsd	xmm6, QWORD PTR ?CanvasPos@Mouse@Input@@2U?$vec@$02M$0A@@glm@@A
	movsd	QWORD PTR Position$[rsp], xmm6
	mov	esi, DWORD PTR ?CanvasPos@Mouse@Input@@2U?$vec@$02M$0A@@glm@@A+8

; 16   :     static glm::vec3 PreviousPosition = Position;

	mov	r14d, OFFSET FLAT:_Init_thread_epoch
	mov	rax, QWORD PTR gs:88
	mov	rbx, QWORD PTR [rax]
	mov	eax, DWORD PTR [r14+rbx]
	cmp	DWORD PTR ?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA, eax
	jle	SHORT $LN2@DrawInterp
	lea	rcx, OFFSET FLAT:?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA, -1
	jne	SHORT $LN2@DrawInterp
	movsd	QWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi
	lea	rcx, OFFSET FLAT:?$TSS0@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
	call	_Init_thread_footer
$LN2@DrawInterp:

; 17   :     static glm::vec3 PreviousDrawnPosition = Position;

	mov	eax, DWORD PTR [r14+rbx]
	cmp	DWORD PTR ?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA, eax
	jle	SHORT $LN3@DrawInterp
	lea	rcx, OFFSET FLAT:?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA, -1
	jne	SHORT $LN3@DrawInterp
	movsd	QWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi
	lea	rcx, OFFSET FLAT:?$TSS1@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA
	call	_Init_thread_footer
$LN3@DrawInterp:

; 18   :     static bool Pressed = true;
; 19   : 
; 20   :     if (!(Input::Mouse::Button == SDL_BUTTON_LEFT && Input::Mouse::State == SDL_PRESSED)) {

	cmp	BYTE PTR ?Button@Mouse@Input@@2EA, 1	; Input::Mouse::Button
	jne	$LN10@DrawInterp
	cmp	BYTE PTR ?State@Mouse@Input@@2EA, 1	; Input::Mouse::State
	jne	$LN10@DrawInterp

; 23   :         return;
; 24   :     }
; 25   : 
; 26   :     if (Input::Mouse::m_InitialClick) {

	cmp	BYTE PTR ?m_InitialClick@Mouse@Input@@2_NA, 0 ; Input::Mouse::m_InitialClick
	je	SHORT $LN11@DrawInterp

; 27   :         PreviousPosition = Position;

	movsd	QWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi

; 28   :         PreviousDrawnPosition = Position;

	movsd	QWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi
$LN11@DrawInterp:

; 29   :     }
; 30   : 
; 31   :     if (!Input::Mouse::m_MouseInCanvas) {

	cmp	BYTE PTR ?m_MouseInCanvas@Mouse@Input@@2_NA, 0 ; Input::Mouse::m_MouseInCanvas
	jne	SHORT $LN12@DrawInterp
$LN720@DrawInterp:

; 67   :             break;
; 68   :         }
; 69   :     }
; 70   :     //glEnable(GL_BLEND);
; 71   :     PreviousDrawnPosition = Position;
; 72   :     PreviousPosition = Position;
; 73   : }

	movsd	QWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi
	jmp	$LN726@DrawInterp
$LN12@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl

; 663  : 		return vec<3, T, Q>(

	movss	xmm1, DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8
	movd	xmm9, esi
	subss	xmm1, xmm9
	movss	xmm0, DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+4
	movss	xmm10, DWORD PTR Position$[rsp+4]
	subss	xmm0, xmm10
	movss	xmm2, DWORD PTR ?PreviousDrawnPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A
	movss	xmm11, DWORD PTR Position$[rsp]
	subss	xmm2, xmm11

; 38   : 		: x(_x), y(_y), z(_z)

	mulss	xmm1, xmm1

; 708  : 		return vec<3, T, Q>(

	mulss	xmm0, xmm0
	mulss	xmm2, xmm2

; 38   : 		: x(_x), y(_y), z(_z)

	addss	xmm2, xmm0
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\func_geometric.inl

; 53   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm2, xmm1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\cmath

; 266  :     return _CSTD sqrtf(_Xx);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN723@DrawInterp
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN724@DrawInterp
$LN723@DrawInterp:
	movaps	xmm0, xmm2
	call	sqrtf
$LN724@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 39   :     if (DrawDist <= 1.0f && Pressed) {

	movss	xmm8, DWORD PTR __real@3f800000
	comiss	xmm8, xmm0
	jb	SHORT $LN13@DrawInterp
	cmp	BYTE PTR ?Pressed@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4_NA, 0
	jne	$LN1@DrawInterp
$LN13@DrawInterp:

; 40   :         return;
; 41   :     }
; 42   :     Pressed = true;

	mov	BYTE PTR ?Pressed@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4_NA, 1
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp

; 125  :     glUseProgram(this->Program);

	mov	ecx, DWORD PTR [rdi+16]
	call	QWORD PTR glad_glUseProgram
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl

; 663  : 		return vec<3, T, Q>(

	movss	xmm1, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8
	subss	xmm1, xmm9
	movss	xmm0, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+4
	subss	xmm0, xmm10
	movss	xmm2, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A
	subss	xmm2, xmm11

; 38   : 		: x(_x), y(_y), z(_z)

	mulss	xmm1, xmm1

; 708  : 		return vec<3, T, Q>(

	mulss	xmm0, xmm0
	mulss	xmm2, xmm2

; 38   : 		: x(_x), y(_y), z(_z)

	addss	xmm2, xmm0
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\func_geometric.inl

; 53   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm2, xmm1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\cmath

; 266  :     return _CSTD sqrtf(_Xx);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN721@DrawInterp
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN722@DrawInterp
$LN721@DrawInterp:
	movaps	xmm0, xmm2
	call	sqrtf
$LN722@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 48   :     int Steps = Dist / 4.0f + 1;

	mulss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, xmm8
	cvttss2si r14d, xmm0
	xorps	xmm7, xmm7
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl

; 54   : 		: x(static_cast<T>(_x))

	mov	QWORD PTR $T6[rsp], 0

; 55   : 		, y(static_cast<T>(_y))
; 56   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T6[rsp+8], 0
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec4.inl

; 178  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@0000000000000000000000003f800000
	movaps	XMMWORD PTR $T8[rbp-256], xmm0
	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003f80000000000000
	movaps	XMMWORD PTR $T8[rbp-240], xmm1
	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
	movaps	XMMWORD PTR $T8[rbp-224], xmm0
	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000000000000000000000
	movaps	XMMWORD PTR $T8[rbp-208], xmm1
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 50   :     m_BrushShader.Uniform<glm::mat4>("view", glm::translate(glm::mat4(1.0f), glm::vec3(0, 0, 0)));

	lea	r8, QWORD PTR $T6[rsp]
	lea	rdx, QWORD PTR $T8[rbp-256]
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	??$translate@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z ; glm::translate<float,0>
	mov	rbx, rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 2322 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T15[rsp], xmm0

; 2666 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T15[rsp+16], 4

; 2667 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T15[rsp+24], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	DWORD PTR $T15[rsp], 2003134838		; 77656976H

; 2674 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T15[rsp+4], 0
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp

; 94   :     unsigned int Location = this->GetUniformLocation(UniformName);

	lea	rdx, QWORD PTR $T15[rsp]
	lea	rcx, QWORD PTR [rdi+8]
	call	?GetUniformLocation@Shader@@QEAAIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Shader::GetUniformLocation

; 95   :     glUniformMatrix4fv(Location, 1, GL_FALSE, &Value[0][0]);

	mov	r9, rbx
	xor	r8d, r8d
	mov	ebx, 1
	mov	edx, ebx
	mov	ecx, eax
	call	QWORD PTR glad_glUniformMatrix4fv
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 4868 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T15[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN304@DrawInterp

; 4869 :             _ASAN_STRING_REMOVE(*this);
; 4870 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4871 :             auto& _Al          = _Getal();
; 4872 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4873 :             _My_data._Activate_SSO_buffer();
; 4874 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory

; 946  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T15[rsp]
	mov	rax, rcx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN316@DrawInterp

; 147  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN316@DrawInterp
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN316@DrawInterp:

; 255  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN304@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 51   :     m_BrushShader.Uniform<glm::mat4>("projection", glm::ortho(0.0f, (float)CanvasData::m_CanvasSize.x, 0.0f, (float)CanvasData::m_CanvasSize.y));

	movss	xmm5, DWORD PTR ?m_CanvasSize@CanvasData@@2U?$vec@$01M$0A@@glm@@A+4
	movss	xmm4, DWORD PTR ?m_CanvasSize@CanvasData@@2U?$vec@$01M$0A@@glm@@A
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec4.inl

; 179  : 		, y(static_cast<T>(_y))

	mov	QWORD PTR $T35[rsp+4], 0

; 181  : 		, w(static_cast<T>(_w))

	mov	QWORD PTR $T35[rsp+12], 0

; 180  : 		, z(static_cast<T>(_z))

	mov	QWORD PTR $T35[rsp+24], 0

; 178  : 		: x(static_cast<T>(_x))

	mov	QWORD PTR $T35[rsp+32], 0

; 181  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T35[rsp+44], 0

; 180  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T35[rbp-200], 0

; 181  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T35[rbp-196], 1065353216	; 3f800000H
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\ext\matrix_clip_space.inl

; 7    : 		Result[0][0] = static_cast<T>(2) / (right - left);

	movaps	xmm2, xmm4
	subss	xmm2, xmm7
	movss	xmm1, DWORD PTR __real@40000000
	movaps	xmm0, xmm1
	divss	xmm0, xmm2
	movss	DWORD PTR $T35[rsp], xmm0

; 8    : 		Result[1][1] = static_cast<T>(2) / (top - bottom);

	movaps	xmm3, xmm5
	subss	xmm3, xmm7
	divss	xmm1, xmm3
	movss	DWORD PTR $T35[rsp+20], xmm1

; 9    : 		Result[2][2] = - static_cast<T>(1);

	mov	DWORD PTR $T35[rsp+40], -1082130432	; bf800000H

; 10   : 		Result[3][0] = - (right + left) / (right - left);

	addss	xmm4, xmm7
	xorps	xmm4, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm4, xmm2
	movss	DWORD PTR $T35[rbp-208], xmm4

; 11   : 		Result[3][1] = - (top + bottom) / (top - bottom);

	addss	xmm5, xmm7
	xorps	xmm5, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm5, xmm3
	movss	DWORD PTR $T35[rbp-204], xmm5
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 2322 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T51[rbp-256], xmm0

; 2666 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T51[rbp-240], 10

; 2667 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T51[rbp-232], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movsd	xmm0, QWORD PTR ??_C@_0L@PPHAJBEH@projection@
	movsd	QWORD PTR $T51[rbp-256], xmm0
	movzx	eax, WORD PTR ??_C@_0L@PPHAJBEH@projection@+8
	mov	WORD PTR $T51[rbp-248], ax

; 2674 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T51[rbp-246], 0
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp

; 94   :     unsigned int Location = this->GetUniformLocation(UniformName);

	lea	rdx, QWORD PTR $T51[rbp-256]
	lea	rcx, QWORD PTR [rdi+8]
	call	?GetUniformLocation@Shader@@QEAAIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Shader::GetUniformLocation

; 95   :     glUniformMatrix4fv(Location, 1, GL_FALSE, &Value[0][0]);

	lea	r9, QWORD PTR $T35[rsp]
	xor	r8d, r8d
	mov	edx, ebx
	mov	ecx, eax
	call	QWORD PTR glad_glUniformMatrix4fv
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 4868 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T51[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN475@DrawInterp

; 4869 :             _ASAN_STRING_REMOVE(*this);
; 4870 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4871 :             auto& _Al          = _Getal();
; 4872 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4873 :             _My_data._Activate_SSO_buffer();
; 4874 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory

; 946  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T51[rbp-256]
	mov	rax, rcx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN487@DrawInterp

; 147  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN487@DrawInterp
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN487@DrawInterp:

; 255  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN475@DrawInterp:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 2322 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T70[rbp-256], xmm0

; 2666 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T70[rbp-240], 5

; 2667 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T70[rbp-232], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	eax, DWORD PTR ??_C@_05PDOBBJNA@Color@
	mov	DWORD PTR $T70[rbp-256], eax
	movzx	eax, BYTE PTR ??_C@_05PDOBBJNA@Color@+4
	mov	BYTE PTR $T70[rbp-252], al

; 2674 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T70[rbp-251], 0
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp

; 118  :     unsigned int Location = this->GetUniformLocation(UniformName);

	lea	rdx, QWORD PTR $T70[rbp-256]
	lea	rcx, QWORD PTR [rdi+8]
	call	?GetUniformLocation@Shader@@QEAAIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Shader::GetUniformLocation

; 119  :     glUniform4f(Location, Value[0], Value[1], Value[2], Value[3]);

	movss	xmm0, DWORD PTR ?m_Color@WindowData@@2U?$vec@$03M$0A@@glm@@A+12
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR ?m_Color@WindowData@@2U?$vec@$03M$0A@@glm@@A+8
	movss	xmm2, DWORD PTR ?m_Color@WindowData@@2U?$vec@$03M$0A@@glm@@A+4
	movss	xmm1, DWORD PTR ?m_Color@WindowData@@2U?$vec@$03M$0A@@glm@@A
	mov	ecx, eax
	call	QWORD PTR glad_glUniform4f
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 4868 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T70[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN604@DrawInterp

; 4869 :             _ASAN_STRING_REMOVE(*this);
; 4870 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4871 :             auto& _Al          = _Getal();
; 4872 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4873 :             _My_data._Activate_SSO_buffer();
; 4874 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory

; 946  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T70[rbp-256]
	mov	rax, rcx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN616@DrawInterp

; 147  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN616@DrawInterp
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN616@DrawInterp:

; 255  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN604@DrawInterp:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 4877 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T70[rbp-240], 0

; 4878 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T70[rbp-232], 15

; 4879 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4880 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T70[rbp-256], 0
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 54   :     for (int i = 1; i <= Steps; ++i) {

	cmp	r14d, 1
	jl	$LN720@DrawInterp
	movd	xmm12, r14d
	cvtdq2ps xmm12, xmm12
	npad	7
$LL6@DrawInterp:
	xorps	xmm0, xmm0

; 55   :         glm::vec3 Pos = glm::lerp(PreviousPosition, Position, (float)i * 1.0/(float)Steps);

	cvtsi2ss xmm0, ebx
	cvtps2pd xmm2, xmm0
	xorps	xmm1, xmm1
	cvtss2sd xmm1, xmm12
	divsd	xmm2, xmm1
	cvtpd2ps xmm3, xmm2
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl

; 672  : 		return vec<3, T, Q>(

	movaps	xmm0, xmm9
	mulss	xmm0, xmm3
	movaps	xmm1, xmm10
	mulss	xmm1, xmm3
; File C:\dev\Photo Studio\Photo Studio\Source\Utilities.cpp

; 6    : 		return x * (1.f - t) + y * t;

	movaps	xmm2, xmm8
	subss	xmm2, xmm3
; File C:\dev\Photo Studio\Photo Studio\Dependencies\glm\detail\type_vec3.inl

; 672  : 		return vec<3, T, Q>(

	movss	xmm4, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8
	mulss	xmm4, xmm2
	movss	xmm5, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+4
	mulss	xmm5, xmm2

; 38   : 		: x(_x), y(_y), z(_z)

	addss	xmm4, xmm0

; 618  : 		return vec<3, T, Q>(

	addss	xmm5, xmm1

; 672  : 		return vec<3, T, Q>(

	movaps	xmm1, xmm11
	mulss	xmm1, xmm3
	movss	xmm0, DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A
	mulss	xmm0, xmm2

; 618  : 		return vec<3, T, Q>(

	addss	xmm1, xmm0

; 38   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR Pos$120[rsp], xmm1
	movss	DWORD PTR Pos$120[rsp+4], xmm5
	movss	DWORD PTR Pos$120[rsp+8], xmm4
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 57   :         switch (m_BrushMode)

	mov	ecx, DWORD PTR [rdi]
	test	ecx, ecx
	je	$LN15@DrawInterp
	cmp	ecx, 1
	jne	$LN4@DrawInterp

; 58   :         {
; 59   :         case BrushMode::Eraser:
; 60   :             glDisable(GL_BLEND);

	mov	ecx, 3042				; 00000be2H
	call	QWORD PTR glad_glDisable
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 2322 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T98[rsp], xmm0

; 2666 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T98[rsp+16], 5

; 2667 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T98[rsp+24], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	eax, DWORD PTR ??_C@_05PDOBBJNA@Color@
	mov	DWORD PTR $T98[rsp], eax
	movzx	eax, BYTE PTR ??_C@_05PDOBBJNA@Color@+4
	mov	BYTE PTR $T98[rsp+4], al

; 2674 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T98[rsp+5], 0
; File C:\dev\Photo Studio\Photo Studio\Source\Shader.cpp

; 118  :     unsigned int Location = this->GetUniformLocation(UniformName);

	lea	rdx, QWORD PTR $T98[rsp]
	lea	rcx, QWORD PTR [rdi+8]
	call	?GetUniformLocation@Shader@@QEAAIAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Shader::GetUniformLocation

; 119  :     glUniform4f(Location, Value[0], Value[1], Value[2], Value[3]);

	movss	DWORD PTR [rsp+32], xmm7
	movaps	xmm3, xmm7
	movaps	xmm2, xmm7
	movaps	xmm1, xmm7
	mov	ecx, eax
	call	QWORD PTR glad_glUniform4f
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xstring

; 2282 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T98[rsp+24]
	cmp	rdx, 16

; 4868 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN150@DrawInterp

; 4869 :             _ASAN_STRING_REMOVE(*this);
; 4870 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4871 :             auto& _Al          = _Getal();
; 4872 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4873 :             _My_data._Activate_SSO_buffer();
; 4874 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory

; 946  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T98[rsp]
	mov	rax, rcx

; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN162@DrawInterp

; 147  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN159@DrawInterp
$LN162@DrawInterp:

; 255  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN150@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 62   :             DrawPencil(Pos, CustomSize);

	movsd	xmm0, QWORD PTR Pos$120[rsp]
	movsd	QWORD PTR $T118[rbp-256], xmm0
	mov	eax, DWORD PTR Pos$120[rsp+8]
	mov	DWORD PTR $T118[rbp-248], eax
	movaps	xmm2, xmm13
	lea	rdx, QWORD PTR $T118[rbp-256]
	mov	rcx, rdi
	call	?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z ; Brush::DrawPencil

; 63   :             glEnable(GL_BLEND);

	mov	ecx, 3042				; 00000be2H
	call	QWORD PTR glad_glEnable

; 64   :             break;

	jmp	SHORT $LN4@DrawInterp
$LN15@DrawInterp:

; 65   :         case BrushMode::Pencil:
; 66   :             DrawPencil(Pos, m_BrushSize);

	movss	DWORD PTR $T119[rsp], xmm1
	movss	DWORD PTR $T119[rsp+4], xmm5
	movss	DWORD PTR $T119[rsp+8], xmm4
	movss	xmm2, DWORD PTR [rdi+4]
	lea	rdx, QWORD PTR $T119[rsp]
	mov	rcx, rdi
	call	?DrawPencil@Brush@@AEAAXU?$vec@$02M$0A@@glm@@M@Z ; Brush::DrawPencil
$LN4@DrawInterp:

; 54   :     for (int i = 1; i <= Steps; ++i) {

	inc	ebx
	cmp	ebx, r14d
	jg	$LN720@DrawInterp
	jmp	$LL6@DrawInterp
$LN159@DrawInterp:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.36.32532\include\xmemory

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN10@DrawInterp:
; File C:\dev\Photo Studio\Photo Studio\Source\Tools\Brush.cpp

; 22   :         Pressed = false;

	mov	BYTE PTR ?Pressed@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4_NA, 0
$LN726@DrawInterp:

; 67   :             break;
; 68   :         }
; 69   :     }
; 70   :     //glEnable(GL_BLEND);
; 71   :     PreviousDrawnPosition = Position;
; 72   :     PreviousPosition = Position;
; 73   : }

	movsd	QWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A, xmm6
	mov	DWORD PTR ?PreviousPosition@?1??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4U?$vec@$02M$0A@@glm@@A+8, esi
$LN1@DrawInterp:
	lea	r11, QWORD PTR [rsp+416]
	mov	rbx, QWORD PTR [r11+64]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN725@DrawInterp:
?DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z ENDP	; Brush::DrawInterpolatedPaintbrush
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Pos$120 = 48
$T6 = 48
$T119 = 64
Position$ = 64
$T98 = 80
$T35 = 80
$T15 = 80
$T70 = 144
$T51 = 144
$T8 = 144
$T118 = 208
$T13 = 224
this$ = 464
CustomSize$ = 472
?dtor$0@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA PROC ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$0
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA ENDP ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Pos$120 = 48
$T6 = 48
$T119 = 64
Position$ = 64
$T98 = 80
$T35 = 80
$T15 = 80
$T70 = 144
$T51 = 144
$T8 = 144
$T118 = 208
$T13 = 224
this$ = 464
CustomSize$ = 472
?dtor$1@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA PROC ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$1
	lea	rcx, QWORD PTR $T51[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA ENDP ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Pos$120 = 48
$T6 = 48
$T119 = 64
Position$ = 64
$T98 = 80
$T35 = 80
$T15 = 80
$T70 = 144
$T51 = 144
$T8 = 144
$T118 = 208
$T13 = 224
this$ = 464
CustomSize$ = 472
?dtor$2@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA PROC ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$2
	lea	rcx, QWORD PTR $T70[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA ENDP ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Pos$120 = 48
$T6 = 48
$T119 = 64
Position$ = 64
$T98 = 80
$T35 = 80
$T15 = 80
$T70 = 144
$T51 = 144
$T8 = 144
$T118 = 208
$T13 = 224
this$ = 464
CustomSize$ = 472
?dtor$3@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA PROC ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$3
	lea	rcx, QWORD PTR $T98[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??DrawInterpolatedPaintbrush@Brush@@QEAAXM@Z@4HA ENDP ; `Brush::DrawInterpolatedPaintbrush'::`1'::dtor$3
text$x	ENDS
END
